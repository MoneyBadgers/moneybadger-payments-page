name: Staging deployment
on:
  push:
    branches:
      - staging

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      VITE_HOST: 'https://api.staging.cryptoqr.co.za' # API host
      # STAGING_AWS_REGION: # Defined in repo environment variables
      # STAGING_S3_BUCKET:  # Defined in repo environment variables
      # STAGING_CLOUDFRONT_DISTRIBUTION_ID:  # Defined in repo environment variables

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # LTS version

      - name: Install dependencies
        run: npm ci

      # - name: Run audit
      #   run: npm audit

      - name: Build the project
        run: npm run build --if-present

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.STAGING_AWS_REGION }}

      - name: Sync to S3
        run: aws s3 sync ./dist s3://${{ vars.STAGING_S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        id: invalidate_cache
        run: |
          invalidation_id=$(aws cloudfront create-invalidation --distribution-id ${{ vars.STAGING_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*" --query 'Invalidation.Id' --output text)
          echo "::set-output name=invalidation_id::$invalidation_id"

      - name: Wait for CloudFront invalidation
        run: |
          while true; do
            STATUS=$(aws cloudfront get-invalidation --distribution-id ${{ vars.STAGING_CLOUDFRONT_DISTRIBUTION_ID }} --id ${{ steps.invalidate_cache.outputs.invalidation_id }} --query 'Invalidation.Status' --output text)
            if [ "$STATUS" == "Completed" ]; then
              echo "Invalidation completed."
              break
            fi
            echo "Invalidation in progress..."
            sleep 5
          done